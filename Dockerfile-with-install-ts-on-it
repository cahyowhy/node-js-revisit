FROM node:12.18-alpine

# deleted cause this dockerfile will build the ts file from the doker
# if this present.. all devDependencies on package.json will be also installed
# ENV NODE_ENV=production

WORKDIR /usr/src/app
COPY ["package.json", "package-lock.json*", "tsconfig.json", "npm-shrinkwrap.json*", "./"]

# npm install --production to prevent install dev dependencies
# mv node_modules ../ https://stackoverflow.com/questions/54198947/why-move-node-modules-to-parent-directory
# leverage the advantage of caching mechanism on docker.
# So in our case, it'll only run npm installâ€¦ if the previous layer had changes, say an updated package.json. 
# If not, then it won't execute the npm install command, even if, say, index.js might have changed.
# RUN npm install --production --silent && mv node_modules ../

RUN npm install typescript -g
COPY . .
RUN npm install --silent && npm run build && mv node_modules ../
EXPOSE 3000
CMD ["npm", "start"]
